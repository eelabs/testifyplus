name: testifyplus::Build

on:
  push:
    branch:
      - master
  pull_request:
    branches-ignore:
      - master

env:
  GOFLAGS: '-mod=vendor'

jobs:
  review:
    name: Review code
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code
        uses: actions/checkout@master

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # https://staticcheck.io/docs/checks
      - name: Check suspicious constructs (staticcheck)
        run: |
          ## add executables installed with go get to PATH
          ## TODO: this will hopefully be fixed by
          ## https://github.com/actions/setup-go/issues/14
          export PATH=${PATH}:`go env GOPATH`/bin
          GOFLAGS='' go get honnef.co/go/tools/cmd/staticcheck
          staticcheck ./...

      - name: Check suspicious constructs (vet)
        run: |
          GOFLAGS='' go vet ./...

  security-review:
    name: Review security
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code
        uses: actions/checkout@master

      # https://github.com/securego/gosec
      - name: Scan for security issues (gosec)
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b GOPATH/bin v2.1.0
          GOPATH/bin/gosec ./...

  dependency-check:
    name: OWASP Dependency check
    runs-on: ubuntu-latest

    steps:
      # go dep is not needed for this step but adding so that the
      # owasp-dependency-check dir can be add under GOPATH dir
      # for ease of caching. There is probably a better way but easy is good for now
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code
        uses: actions/checkout@master

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # https://github.com/jeremylong/DependencyCheck
      - name: Scan dependencies
        env: |
          OWASPDC_DIRECTORY: ~/go/pkg/mod/cache/owasp-dependency-check
        run: |
          if [ ! -d "$DATA_DIRECTORY" ]; then
            echo "Initially creating persistent directory: $DATA_DIRECTORY"
            mkdir -p "$DATA_DIRECTORY"
          fi
          if [ ! -d "$REPORT_DIRECTORY" ]; then
            echo "Initially creating persistent directory: $REPORT_DIRECTORY"
            mkdir -p "$REPORT_DIRECTORY"
          fi
          if [ ! -d "$CACHE_DIRECTORY" ]; then
            echo "Initially creating persistent directory: $CACHE_DIRECTORY"
            mkdir -p "$CACHE_DIRECTORY"
          fi

          # Make sure we are using the latest version
          docker pull owasp/dependency-check

          docker run --rm \
          --volume $(pwd):/src \
          --volume "$DATA_DIRECTORY":/usr/share/dependency-check/data \
          --volume "$REPORT_DIRECTORY":/report \
          owasp/dependency-check \
          --scan /src \
          --format "ALL" \
          --project "My OWASP Dependency Check Project" \
          --out /report
        # Use suppression like this: (/src == $pwd)
        # --suppression "/src/security/dependency-check-suppression.xml"

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code
        uses: actions/checkout@master

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: build
        run: |
          go test ./... -cover -coverprofile=cover.out
